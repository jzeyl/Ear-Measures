#direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
index<-6
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
#direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
index<-2
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
#direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
#list.files(direct)
TM<-list.files(direct, pattern = "TM", recursive = TRUE, full.names = TRUE)
EC<-list.files(direct, pattern = "EC", recursive = TRUE, full.names = TRUE)
FP<-list.files(direct, pattern = "points", recursive = TRUE, full.names = TRUE)
RW<-list.files(direct, pattern = "RW", recursive = TRUE, full.names = TRUE)
CA<-list.files(direct, pattern = "CA", recursive = TRUE, full.names = TRUE)
col<-list.files(direct, pattern = ".stl", recursive = TRUE, full.names = TRUE)
#load coordinate files in this order: TM, EC, FP (pp), RW, CA
TMperimeter<-read.fcsv(TM)
ECpoints<-read.fcsv(EC)
FPperimeter<-read.mpp(FP)#read landmarks from meshlab
RWperimeter<-read.fcsv(RW)
CAperimeter<-read.fcsv(CA)
# import libraries
library(Morpho)#read.mpp function
library(geomorph)#digit curves function
library(rgl)#plotting
#load coordinate files in this order: TM, EC, FP (pp), RW, CA
TMperimeter<-read.fcsv(TM)
ECpoints<-read.fcsv(EC)
FPperimeter<-read.mpp(FP)#read landmarks from meshlab
RWperimeter<-read.fcsv(RW)
CAperimeter<-read.fcsv(CA)
#convert point curves to equidistance points using digit curves function from geomorph
TMcurve<-as.data.frame(digit.curves(start = TMperimeter[1,], curve = TMperimeter, nPoints = 15, closed = TRUE))#make equidistant points
ECpoints<-as.data.frame(ECpoints)
FPcurve<-as.data.frame(digit.curves(start = FPperimeter[1,], curve = FPperimeter, nPoints = 15, closed = TRUE))#make equidistant points
RWcurve<-as.data.frame(digit.curves(start = RWperimeter[1,], curve = RWperimeter, nPoints = 15, closed = TRUE))#make equidistant points
CAcurve<-as.data.frame(digit.curves(start = CAperimeter[1,], curve = CAperimeter, nPoints = 15, closed = TRUE))#make equidistant points
#run calculation scripts
calculationfiles<-list.files("F:/0earmeasures/Scan_measurements/calculations", pattern = "*.R", full.names = TRUE)#########check dir here
sapply(calculationfiles,source,.GlobalEnv)# run the calculations from the R scripts
#source(calculationfiles[4])
#plot wireframe diagram of ear based input corrdinates. Will prompt for the 3D *.stl file for the columella
setwd("F:/0earmeasures/Scan_measurements/")
source("plot_ear_auto_STL.R")
#run calculation scripts
calculationfiles<-list.files("D:/0earmeasures/Scan_measurements/calculations", pattern = "*.R", full.names = TRUE)#########check dir here
sapply(calculationfiles,source,.GlobalEnv)# run the calculations from the R scripts
#source(calculationfiles[4])
#plot wireframe diagram of ear based input corrdinates. Will prompt for the 3D *.stl file for the columella
setwd("D:/0earmeasures/Scan_measurements/")
source("plot_ear_auto_STL.R")
write.fcsv(fullRW)
?getwd
getwd()
?create.dir
?dir.create
dir.create("D:/Outputs/STLs/FCSVs")
dir.create("D:/Outputs/FCSVs")
dir.create("D:/Outputs/FCSVs")
dir.create(paste0(outputfcsv,ID))
outputfcsv<-"D:/Outputs/FCSVs"
outputfcsv<-"D:/Outputs/FCSVs/"
dir.create(paste0(outputfcsv,ID))
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "orange", lwd = 3)#plot cochlear aqueduct
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "black", lwd = 3)#plot footplate
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL("D:/test.stl")
?write.fcsv
write.fcsv(fullRW,paste0(outputfcsv,ID, "_RW.fcsv"))
paste0(outputfcsv,ID, "_RW.fcsv")
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
writeSTL(fullRW,paste0(outputfcsv,ID, "/_RW.stl"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/_RW.stl"))
write.fcsv(fullCA,paste0(outputfcsv,ID, "/_CA.fcsv"))
rgl.clear()
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/_CA.stl"))
write.fcsv(fullFP,paste0(outputfcsv,ID, "/_FP.fcsv"))
rgl.clear()
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/_FP.stl"))
rgl.clear()
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
TMFULL<-rbind(fullperimeter,EStapTipeveryother)
TMFULL<-rbind(fullperimeter,EStapTipeveryother)
write.fcsv(TMFULL,paste0(outputfcsv,ID, "/_TM.fcsv"))
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
writeSTL(paste0(outputfcsv,ID, "/_TM.stl"))
rgl.clear()
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
rgl.clear()
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/_TMplane.stl"))
rgl.clear()
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/_TMplane.stl"))
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/_TMplane.stl"))
write.fcsv(colTMpoint,paste0(outputfcsv,ID, "/",ID,"_distoTMplane.fcsv"))
write.fcsv(colTMpoint,paste0(outputfcsv,ID, "/",ID,"_distoTMplane.fcsv"))
rgl.clear()
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_distoTMplane.stl"))
#RW
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_RW.stl"))
#CA
write.fcsv(fullCA,paste0(outputfcsv,ID, "/_CA.fcsv"))
rgl.clear()
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_CA.stl"))
#FP
write.fcsv(fullFP,paste0(outputfcsv,ID, "/_FP.fcsv"))
rgl.clear()
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_FP.stl"))
#TM
TMFULL<-rbind(fullperimeter,EStapTipeveryother)
write.fcsv(TMFULL,paste0(outputfcsv,ID, "/_TM.fcsv"))
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TM.stl"))
#TMplane
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TMplane.stl"))
#FP
write.fcsv(colTMpoint,paste0(outputfcsv,ID, "/",ID,"_distoTMplane.fcsv"))
rgl.clear()
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_distoTMplane.stl"))
#UmbotoTMplane
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.fcsv"))
rgl.clear()
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.stl"))
Mpoint
TMpoint
coltoTMcentroid<-rbind(TMcentroid,Coltip)
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "green", lwd = 3)
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "orange", lwd = 3)#plot cochlear aqueduct
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "black", lwd = 3)#plot footplate
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "brown", lwd = 3)
rgl.clear()
#tympanic membrane and other areas
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "orange", lwd = 3)#plot cochlear aqueduct
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "black", lwd = 3)#plot footplate
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "brown", lwd = 3)
?lines3d
triangles3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "orange", lwd = 3)#plot cochlear aqueduct
length(fullCA)
nrow(fullCA)
49/3
47/3
48/3
fullCAtest<-fullCA[-29,]
triangles3d(fullCAtest)
segments3d(fullCAtest)
length(fullRW)
nrow(fullRW)
RWtest<-fullRW[-49,]
triangles3d(RWtest)
index<-5
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
#direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
dir.create(paste0(outputfcsv,"/".ID))
dir.create(paste0(outputfcsv,"/",ID))
outputfcsv<-"D:/Outputs/FCSVs/"
dir.create(paste0(outputfcsv,"/",ID))
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_RW.stl"))
#list.files(direct)
TM<-list.files(direct, pattern = "TM", recursive = TRUE, full.names = TRUE)
EC<-list.files(direct, pattern = "EC", recursive = TRUE, full.names = TRUE)
FP<-list.files(direct, pattern = "points", recursive = TRUE, full.names = TRUE)
RW<-list.files(direct, pattern = "RW", recursive = TRUE, full.names = TRUE)
CA<-list.files(direct, pattern = "CA", recursive = TRUE, full.names = TRUE)
col<-list.files(direct, pattern = ".stl", recursive = TRUE, full.names = TRUE)
#load coordinate files in this order: TM, EC, FP (pp), RW, CA
TMperimeter<-read.fcsv(TM)
ECpoints<-read.fcsv(EC)
FPperimeter<-read.mpp(FP)#read landmarks from meshlab
RWperimeter<-read.fcsv(RW)
CAperimeter<-read.fcsv(CA)
#convert point curves to equidistance points using digit curves function from geomorph
TMcurve<-as.data.frame(digit.curves(start = TMperimeter[1,], curve = TMperimeter, nPoints = 15, closed = TRUE))#make equidistant points
ECpoints<-as.data.frame(ECpoints)
FPcurve<-as.data.frame(digit.curves(start = FPperimeter[1,], curve = FPperimeter, nPoints = 15, closed = TRUE))#make equidistant points
RWcurve<-as.data.frame(digit.curves(start = RWperimeter[1,], curve = RWperimeter, nPoints = 15, closed = TRUE))#make equidistant points
CAcurve<-as.data.frame(digit.curves(start = CAperimeter[1,], curve = CAperimeter, nPoints = 15, closed = TRUE))#make equidistant points
#run calculation scripts
calculationfiles<-list.files("D:/0earmeasures/Scan_measurements/calculations", pattern = "*.R", full.names = TRUE)#########check dir here
sapply(calculationfiles,source,.GlobalEnv)# run the calculations from the R scripts
#source(calculationfiles[4])
#plot wireframe diagram of ear based input corrdinates. Will prompt for the 3D *.stl file for the columella
setwd("D:/0earmeasures/Scan_measurements/")
source("plot_ear_auto_STL.R")
#set output paths for saving the computed values
outputpathsingles<-"D:/Outputs/Singlevalues/"#calculated values
outputpathangles<-"D:/Outputs/TM angles/"#angles for all
outputpathcoords<-"D:/Outputs/Coordinates/"# all computed coordinates on a single csv file
snapshotpath<-"D:/Outputs/Snapshots/"#directory for wirefram snapshots
outputfcsv<-"D:/Outputs/FCSVs/"
STLpath<-"D:/Outputs/STLs/"
dir.create(paste0(outputfcsv,"/",ID))
#RW
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_RW.stl"))
#CA
write.fcsv(fullCA,paste0(outputfcsv,ID, "/_CA.fcsv"))
rgl.clear()
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_CA.stl"))
#FP
write.fcsv(fullFP,paste0(outputfcsv,ID, "/_FP.fcsv"))
rgl.clear()
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "green", lwd = 3)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_FP.stl"))
#TM
TMFULL<-rbind(fullperimeter,EStapTipeveryother)
write.fcsv(TMFULL,paste0(outputfcsv,ID, "/_TM.fcsv"))
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TM.stl"))
#TMplane
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 3)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TMplane.stl"))
#coldisttoTMplane
write.fcsv(colTMpoint,paste0(outputfcsv,ID, "/",ID,"_distoTMplane.fcsv"))
rgl.clear()
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_distoTMplane.stl"))
#UmbotoTMplane
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.fcsv"))
rgl.clear()
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.stl"))
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_ECDlength.fcsv"))
rgl.clear()
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
writeSTL(paste0(outputfcsv,ID, "/",ID,"_ECDlength.stl"))
#Disttocentroid
write.fcsv(coltoTMcentroid,paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.fcsv"))
rgl.clear()
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.stl"))
lenth(fullRW)
length(fullRW)
nrow(fullRW)
RW3<-fullRW[-49,]
triangles3d(RW3)
writeSTL(test.stl)
writeSTL("test.stl")
getwd()
#Disttocentroid
write.fcsv(coltoTMcentroid,paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.fcsv"))
rgl.clear()
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "green", lwd = 3)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.stl"))
#ECD length
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_ECDlength.fcsv"))
rgl.clear()
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 3)#plot endosseous cochlear duct
writeSTL(paste0(outputfcsv,ID, "/",ID,"_ECDlength.stl"))
index<-3
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
TM<-list.files(direct, pattern = "TM", recursive = TRUE, full.names = TRUE)
EC<-list.files(direct, pattern = "EC", recursive = TRUE, full.names = TRUE)
FP<-list.files(direct, pattern = "points", recursive = TRUE, full.names = TRUE)
RW<-list.files(direct, pattern = "RW", recursive = TRUE, full.names = TRUE)
CA<-list.files(direct, pattern = "CA", recursive = TRUE, full.names = TRUE)
col<-list.files(direct, pattern = ".stl", recursive = TRUE, full.names = TRUE)
#load coordinate files in this order: TM, EC, FP (pp), RW, CA
TMperimeter<-read.fcsv(TM)
ECpoints<-read.fcsv(EC)
FPperimeter<-read.mpp(FP)#read landmarks from meshlab
RWperimeter<-read.fcsv(RW)
CAperimeter<-read.fcsv(CA)
#convert point curves to equidistance points using digit curves function from geomorph
TMcurve<-as.data.frame(digit.curves(start = TMperimeter[1,], curve = TMperimeter, nPoints = 15, closed = TRUE))#make equidistant points
ECpoints<-as.data.frame(ECpoints)
FPcurve<-as.data.frame(digit.curves(start = FPperimeter[1,], curve = FPperimeter, nPoints = 15, closed = TRUE))#make equidistant points
RWcurve<-as.data.frame(digit.curves(start = RWperimeter[1,], curve = RWperimeter, nPoints = 15, closed = TRUE))#make equidistant points
CAcurve<-as.data.frame(digit.curves(start = CAperimeter[1,], curve = CAperimeter, nPoints = 15, closed = TRUE))#make equidistant points
#run calculation scripts
calculationfiles<-list.files("D:/0earmeasures/Scan_measurements/calculations", pattern = "*.R", full.names = TRUE)#########check dir here
sapply(calculationfiles,source,.GlobalEnv)# run the calculations from the R scripts
#source(calculationfiles[4])
#plot wireframe diagram of ear based input corrdinates. Will prompt for the 3D *.stl file for the columella
setwd("D:/0earmeasures/Scan_measurements/")
source("plot_ear_auto_STL.R")
####CHECK OUTPUT PATH DRIVE IS GOING TO CORRECT USB/ HARD DRIVE"
#set output paths for saving the computed values
outputpathsingles<-"D:/Outputs/Singlevalues/"#calculated values
outputpathangles<-"D:/Outputs/TM angles/"#angles for all
outputpathcoords<-"D:/Outputs/Coordinates/"# all computed coordinates on a single csv file
snapshotpath<-"D:/Outputs/Snapshots/"#directory for wirefram snapshots
outputfcsv<-"D:/Outputs/FCSVs/"
STLpath<-"D:/Outputs/STLs/"
#Save the computations and coordinates
setwd("S:/0earmeasures/Scan_measurements/")
source("outputs.R")
#Save the computations and coordinates
setwd("D:/0earmeasures/Scan_measurements/")
source("outputs.R")
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 3)#plot TM connections to umbo
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
write.fcsv(ColTipeveryother[1:2,],paste0(outputfcsv,ID, "/_EClength.fcsv"))
#EClength
write.fcsv(ColTipeveryother[1:2,],paste0(outputfcsv,ID, "/_EClength.fcsv"))
rgl.clear()
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 3)#plot extracolumella
writeSTL(paste0(outputfcsv,ID, "/",ID,"_EClength.stl"))
#RW
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 6)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_RW.stl"))
#RW
write.fcsv(fullRW,paste0(outputfcsv,ID, "/_RW.fcsv"))
rgl.clear()
lines3d(fullRW[,1],fullRW[,2],fullRW[,3], col = "green", lwd = 6)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_RW.stl"))
#CA
write.fcsv(fullCA,paste0(outputfcsv,ID, "/_CA.fcsv"))
rgl.clear()
lines3d(fullCA[,1],fullCA[,2],fullCA[,3], col = "green", lwd = 6)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_CA.stl"))
#FP
write.fcsv(fullFP,paste0(outputfcsv,ID, "/_FP.fcsv"))
rgl.clear()
lines3d(fullFP[,1],fullFP[,2],fullFP[,3], col = "green", lwd = 6)#plot round window
writeSTL(paste0(outputfcsv,ID, "/",ID,"_FP.stl"))
#TM
TMFULL<-rbind(fullperimeter,EStapTipeveryother)
write.fcsv(TMFULL,paste0(outputfcsv,ID, "/_TM.fcsv"))
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 6)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 6)#plot TM connections to umbo
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TM.stl"))
#EClength
write.fcsv(ColTipeveryother[1:2,],paste0(outputfcsv,ID, "/_EClength.fcsv"))
rgl.clear()
lines3d(ColTipeveryother[1:2,1],ColTipeveryother[1:2,2],ColTipeveryother[1:2,3], color = "blue", lwd = 6)#plot extracolumella
writeSTL(paste0(outputfcsv,ID, "/",ID,"_EClength.stl"))
#TMplane
rgl.clear()
lines3d(fullperimeter[,1],fullperimeter[,2],fullperimeter[,3], color = "red", lwd = 6)#plot curve perimeter
lines3d(EStapTipeveryother[,1],EStapTipeveryother[,2],EStapTipeveryother[,3], color = "red", lwd = 6)#plot TM connections to umbo
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 6)
planes3d(TMa, TMb, TMc, TMd, alpha = 0.5, color = "blue")#plot plane of tympanic membrane
writeSTL(paste0(outputfcsv,ID, "/",ID,"_TMplane.stl"))
#coldisttoTMplane
write.fcsv(colTMpoint,paste0(outputfcsv,ID, "/",ID,"_distoTMplane.fcsv"))
rgl.clear()
lines3d(colTMpoint[,1],colTMpoint[,2],colTMpoint[,3], col = "green", lwd = 6)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_distoTMplane.stl"))
#UmbotoTMplane
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.fcsv"))
rgl.clear()
lines3d(TMpoint[,1],TMpoint[,2],TMpoint[,3], col = "green", lwd = 6)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_umbotoTMplane.stl"))
#Disttocentroid
write.fcsv(coltoTMcentroid,paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.fcsv"))
rgl.clear()
lines3d(coltoTMcentroid[,1],coltoTMcentroid[,2],coltoTMcentroid[,3], col = "green", lwd = 6)
writeSTL(paste0(outputfcsv,ID, "/",ID,"_coltoTMcentroid.stl"))
#ECD length
write.fcsv(TMpoint,paste0(outputfcsv,ID, "/",ID,"_ECDlength.fcsv"))
rgl.clear()
lines3d(FP_ECD[,1],FP_ECD[,2],FP_ECD[,3], col = "purple", lwd = 6)#plot endosseous cochlear duct
writeSTL(paste0(outputfcsv,ID, "/",ID,"_ECDlength.stl"))
# import libraries
library(Morpho)#read.mpp function
library(geomorph)#digit curves function
library(rgl)#plotting
index<-3
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
d_ID
index<-18
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
index<-17
for (i in 1:2){
d_ID<-list.dirs("D:/Input/torepeat/", full.names = FALSE)#list folders with IDs
d_direct<-list.dirs("D:/Input/torepeat/")#list directories
direct<-setwd(d_direct[index])#go through directories
ID<-d_ID[index]#go through IDs
}
TM<-list.files(direct, pattern = "TM", recursive = TRUE, full.names = TRUE)
EC<-list.files(direct, pattern = "EC", recursive = TRUE, full.names = TRUE)
FP<-list.files(direct, pattern = "points", recursive = TRUE, full.names = TRUE)
RW<-list.files(direct, pattern = "RW", recursive = TRUE, full.names = TRUE)
CA<-list.files(direct, pattern = "CA", recursive = TRUE, full.names = TRUE)
col<-list.files(direct, pattern = ".stl", recursive = TRUE, full.names = TRUE)
#load coordinate files in this order: TM, EC, FP (pp), RW, CA
TMperimeter<-read.fcsv(TM)
ECpoints<-read.fcsv(EC)
FPperimeter<-read.mpp(FP)#read landmarks from meshlab
RWperimeter<-read.fcsv(RW)
CAperimeter<-read.fcsv(CA)
#convert point curves to equidistance points using digit curves function from geomorph
TMcurve<-as.data.frame(digit.curves(start = TMperimeter[1,], curve = TMperimeter, nPoints = 15, closed = TRUE))#make equidistant points
ECpoints<-as.data.frame(ECpoints)
FPcurve<-as.data.frame(digit.curves(start = FPperimeter[1,], curve = FPperimeter, nPoints = 15, closed = TRUE))#make equidistant points
RWcurve<-as.data.frame(digit.curves(start = RWperimeter[1,], curve = RWperimeter, nPoints = 15, closed = TRUE))#make equidistant points
CAcurve<-as.data.frame(digit.curves(start = CAperimeter[1,], curve = CAperimeter, nPoints = 15, closed = TRUE))#make equidistant points
#run calculation scripts
calculationfiles<-list.files("D:/0earmeasures/Scan_measurements/calculations", pattern = "*.R", full.names = TRUE)#########check dir here
sapply(calculationfiles,source,.GlobalEnv)# run the calculations from the R scripts
#source(calculationfiles[4])
#plot wireframe diagram of ear based input corrdinates. Will prompt for the 3D *.stl file for the columella
setwd("D:/0earmeasures/Scan_measurements/")
source("plot_ear_auto_STL.R")
####CHECK OUTPUT PATH DRIVE IS GOING TO CORRECT USB/ HARD DRIVE"
#set output paths for saving the computed values
outputpathsingles<-"D:/Outputs/Singlevalues/"#calculated values
outputpathangles<-"D:/Outputs/TM angles/"#angles for all
outputpathcoords<-"D:/Outputs/Coordinates/"# all computed coordinates on a single csv file
snapshotpath<-"D:/Outputs/Snapshots/"#directory for wirefram snapshots
outputfcsv<-"D:/Outputs/FCSVs/"
STLpath<-"D:/Outputs/STLs/"
#Save the computations and coordinates
setwd("D:/0earmeasures/Scan_measurements/")
source("outputs.R")
